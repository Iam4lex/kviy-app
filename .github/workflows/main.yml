name: CI

on: 
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Get current date for cache key
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      # Step 3: Cache Buildozer global directory
      - name: Cache Buildozer global directory
        uses: actions/cache@v2
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      # Step 4: Cache .buildozer directory to speed up subsequent builds
      - name: Cache Buildozer directory
        uses: actions/cache@v2
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}

      # Step 5: Set up Python environment (ensure Python is available)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Replace with your required Python version

      # Step 6: Install Buildozer and other dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libffi-dev libssl-dev
          pip install --upgrade pip
          pip install buildozer

      # Step 7: Build with Buildozer
      - name: Build APK
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          command: buildozer -v android debug
          buildozer_version: stable

      # Step 8: Upload artifacts (the built APK)
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: ./bin/*.apk  # Ensure this path matches the output location of your APK
